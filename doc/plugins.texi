@comment $Id: plugins.texi,v 1.4 2000/04/04 09:07:49 nold Exp $

@node Plugin Collection, Filter API, Console Frontend, Top
@chapter Plugin Collection

@comment TODO: Which index should I list the plugins in?

Available GLAME plugins are listed here with a short description about what
they are able to do, their input and output ports, and the parameters 
they understand. Some ports allow more than one so-called pipe to be
connected. Those restrictions will be listed in the port description. 
Some parameters can be set per plugin, some per pipe. Pipe parameters are
listed with the name of the pipe preceeding the parameter name, separated
by a double colon, like @code{out::position} for parameter @code{position}
on pipe @code{out}. Each parameter is followed by its type--e.g. integer,
float, or string--in parentheses.

@menu
* Audio I/O::
* File I/O::
* Elementary Plugins::
* Effects::
@end menu

@node Audio I/O, File I/O,, Plugin Collection
@section Audio I/O

The @file{audio-in} and @file{audio-out} plugins handle communication between 
GLAME and the sound hardware. @file{audio-in} is for recording, 
@file{audio-out} does the playback. 
Actually, there are several instances of those plugins for different sound
systems like ESD, ALSA, OSS, and native SGI. If available on the system, 
they can be accessed directly via @file{oss-audio-out}, @file{esd-audio-in} 
and the like, using the same sets of parameters. Think of @file{audio-in} and 
@file{audio-out} as sane default methods dependent on the system's capabilities.

@subheading Common parameters
@table @code
@item device (string)
Sound device to be used. Note: While audio-in and audio-out are generic plugins,
interpretation of the device parameter is dependent on the underlying sound
system which the value is passed to unmodified. For example, OSS takes devices
parameters like @file{/dev/dsp} where ALSA would like @code{0:0}.
@end table

@subheading @file{audio-in} ports
@table @code
@item out (output)
Recorded stream of sample data. Maximum number of allowed out-connections 
depends on hardware capabilities.
@end table

@subheading @file{audio-in} parameters
@table @code
@item rate (integer)
The sample rate in Hertz.
@item duration (float)
Recording time in seconds.
@item out::position (float)
Horizontal placement of sample stream in radians from -pi to pi.
@end table

@subheading @file{audio-out} ports
@table @code
@item in (input)
Sample stream to play back. Maximum number of allowed in-connections
depends on hardware capabilities.
@end table

@file{audio-out} has no further specific parameters.


@node File I/O, Elementary Plugins, Audio I/O, Plugin Collection
@section File I/O
Transactions from and to files are handled by the plugins @file{read-file}
and @file{write-file}. @file{read-file} is guaranteed to be able to read
WAV files. Anything else is up to helper libraries that may or may not be
installed on a system. @file{write-file} so far only second guesses the
desired output format from the suffix of the given filename.

@subheading Common parameters
@table @code
@item filename (string)
Name of the file to be read from or written to. The writer takes the
filename suffix as a hint to the desired type of output.
@end table

@subheading @file{read-file} ports
@table @code
@item out (output)
Sample data read in from a sound file. The number of allowed out-connections
varies from file to file.
@end table

@subheading @file{read-file} parameters
@table @code
@item out::position (float)
Horizontal placement of sample stream in radians from -pi to pi.
@end table

@subheading @file{write-file} ports
@table @code
@item in (input)
Sample stream to store to a sound file. Maximum number of allowed in-connections
depends on the desired sound format.
@end table

@file{write-file} has no further specific parameters.

@node Elementary Plugins, Effects, File I/O, Plugin Collection
@section Elementary Plugins

TODO: mul, add, phase-invert (arithmetic.c), drop, one2n (basic.c), 
mix1/2, volume-adjust, delay, extend, repeat (basic_sample.c),
ping (debug.c), echo (echo.c), pan (pan.c), pipe-in (pipe.c),
statistic, debugrms (rms.c), track-in, track-out (track_io.c), 
null, dup (tutorial.c), sinus [*** Doh! Rename to sine! ***], const (waveform.c)

*** Add them here first. Will move to new sections as appropriate. ***

@node Effects,, Elementary Plugins, Plugin Collection
@section Effects

TODO: noisegate (noisegate.c), iir (iir.c)

