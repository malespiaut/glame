@comment $Id: gui.texi,v 1.8 2001/04/19 13:59:15 richi Exp $

@node Graphical Frontend, Console Frontend, Copying, Top
@chapter Graphical Frontend (glame)

Nonsurprisingly, GLAME's graphical frontend is called @file{glame}. It will
usually be called without any argument, though an optional file name may be
given, indicating an alternative location of GLAME's internal swapfile.
@xref{The Main Window}, for details.

When running @file{glame} straight from its source tree without
prior installation, @code{glame/src/} has to be your current working
directory. Otherwise, @file{glame} won't be able to find its plugins.

The graphical frontend consists of three parts. The main window is the only
one active right at the beginning. The wave editor and the filternetwork editor
can be activated from there. Controlling @file{glame} is supposed to be
rather intuitive. Should you ever feel lost, just try pressing the right mouse
button and a context sensitive menu will pop up and hopefully present you
with the option you were looking for.

@menu
* The Main Window::
* The Wave Editor::
* The Filternetwork Editor::
@end menu

@node The Main Window, The Wave Editor, , Graphical Frontend
@section The Main Window

On startup, @file{glame} will present you an application window in well-known
GNOME design that contains a tree view of the so-called @dfn{swapfile}
currently in use. Representations of all the sound tracks you want to edit
will be stored here, so it's certainly a wise idea to put the swapfile on a
partition with plenty of free space. By default, the swapfile resides in 
@file{~/.glameswap}, but you can configure its location in the preferences 
window available from the Settings menu. Note that you need to restart
@file{glame} for the change to become active.

Within the swapfile, individual audio tracks are combined to @dfn{projects}.
You can create new projects using the entry New Project in the Project menu. 
This will insert a new item into the tree view of the swapfile and pop up 
an editing field where you can change the project's name. Double-clicking on
an item allows you to change the name later as well.

Now you're all set to start importing @dfn{files} into your new project, or to
subdivide it further into @dfn{groups}. A context sensitive menu offering
operations on groups or items respectively pops up when you press the
right mouse button. Those are your options:

@subsection Operations on groups

@table @code
@item Edit 
pops up a new window of the wave editor @pxref{The Wave Editor} containing 
all items of the group, where you can easily modify them. This operation is
not allowed for groups that in turn contain further sub-groups.

@item Add group
adds a new group to the current group.

@item Add empty wave
adds a new wave to the current group where you can f.i. start recording
into or paste some random stuff into.

@item Merge with parent
moves all the current group's children up one level
and deletes the current group.

@item Flatten
merges all childs of the current group into the minimum number of
vertically aligned tracks all starting at horizontal position zero
and of the same length.

@item Delete
deletes the current group and all its items.

@item Link selected
links the selected item into the current group. Linking
means that a change on the link will also modify the original and vice versa.

@item Copy selected
copies the selected item into the current group.
Copying means that changing the copy will not alter the original and vice
versa.

@item Import...
imports a file as a sub-group into the current group.

@item Export...
exports all children of the group as an ordinary sound file, for example
a WAV file. This operation takes place on an automatically flattened
subtree.
@end table

@subsection Operations on items

@table @code
@item Edit
pops up a new window of the wave editor @pxref{The Wave Editor},
where you can modify the selected item.

@item Export...
exports the current item as an ordinary sound file, for example a WAV file.

@item Delete
deletes the current item.
@end table



@node The Wave Editor, The Filternetwork Editor, The Main Window , Graphical Frontend
@section The Wave Editor

The wave editor pops up when the @code{Edit} function is applied to either a
group or a single item. Editing is done on all items of a particular group
at once. Functions to edit and explore the current items can be reached via
the right mouse button.

Simple editing can be done using the ordinary @code{Cut}, @code{Copy},
@code{Paste} and @code{Delete} operations, that work on the current selection
in the active wave widget. You can cut and paste between different wave widgets,
if the numbers of channels match. When you operate on multiple views of the
same wave item at once, they will be kept in sync automatically.

The @code{Apply filter} submenu allows you to apply
a pre-existing filter to the active selection. Next, you will be prompted for
the filter's options, if there are any. Alternatively, you can pop up the
filternetwork editor @pxref{The Filternetwork Editor},
where you can construct a custom filter or use @code{Apply custom} which
creates a filternetwork framework containing necessary inputs and outputs
specified by the current selection.

To specify the current selection simply use the mouse and drag it with
the left mousebutton pressed. Alternatively you can use the @code{Select none} 
or @code{Select all} menu items from the @code{Select} submenu to remove
the actual selection or select the whole wave. Pressing shift and the
left mousebutton selects everything starting from the marker position (which
you can set using the left mousebutton) to the current position. The selection
and the marker position can be changed with dragging the marker or the
selections left or right edge (the cursor will change if you move over them).

To control the view use the @code{View} sumenu which contains the
items @code{Zoom to selection}, @code{Zoom in}, @code{Zoom out},
@code{View all} and @code{Goto marker}.

Using the @code{Play all} and @code{Play selection} commands the whole
wave or the selected part will be send to the default audio output device
(which you can specify in the main windows preferences dialog). Using
the @code{Record at marker} and @code{Record into selection} commands
you can sample from the default audio input device (which you can specify
in the main windows preferences dialog) either starting at the marker
position and until you press the @code{STOP} button, or just inside the
selection.



@node The Filternetwork Editor, , The Wave Editor, Graphical Frontend
@section The Filternetwork Editor

The filternetwork editor is opened when you choose one of the custom
functions in the wave editor, or the item @code{New Filternetwork} in
the @code{Filternetwork} menu of the main window. The filternetwork editor
comprises of a button bar on the bottom of the window to execute, pause and
stop the created filternetwork, and a main canvas for connecting and adding
new nodes to the network. A preexisting network can be edited by opening
it from the @code{Open...} item in the @code{Filternetwork} menu of the
main window.

All functionality in the editing window is controlled via context sensitive
menus bound to the right mouse button. When clicking in a background region,
the general menu opens up, providing entries to add nodes, 
load additional plugins and save and load whole filter networks.
Plugins are bundled into categories to speed up finding the desired item.

When a new node is added, its icon appears on the editing canvas.
It shows its input ports (if available) on the left, and output ports
on the right. If no ports of a type are available the corresponding side bar
appears gray.

The icon in the middle of the box offers context menus for manipulating
parameters of the underlying plugin. 

To connect two plugins, click on the output port using the left mouse button,
and drag the pipe to the desired input port. If a connection is possible,
a pipe connection will be drawn. To manipulate per-pipe parameters of the
connected nodes, a context menu is attached to the small black ball placed in
the middle of the pipe.

Finally, if you hover over an icon or port for a little while, the current
parameter settings are shown, and the node is raised to the top.
The hovering delay can be adjusted in the preferences window.

After a network is drawn, it can be started using the @code{play} button. If 
anything is not set up correctly, the malicious plugin will be drawn in red,
and the error will be displayed when hovering over it.

