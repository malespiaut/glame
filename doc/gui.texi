@comment $Id: gui.texi,v 1.15 2001/12/16 15:04:35 richi Exp $

@node Graphical Frontend, Console Frontend, Quick Start Guide, Top
@chapter Graphical Frontend (glame)

Nonsurprisingly, GLAME's graphical frontend is called @file{glame}. It will
usually be called without any argument, though an optional file name may be
given, indicating an alternative location of GLAME's internal swapfile.
@xref{The Main Window}, for details.

When running @file{glame} straight from its source tree without
prior installation, @code{glame/src/} has to be your current working
directory. Otherwise, @file{glame} won't be able to find its plugins.

The graphical frontend consists of three parts. The main window is the only
one active right at the beginning. The wave editor and the filternetwork editor
can be activated from there. Controlling @file{glame} is supposed to be
rather intuitive. Should you ever feel lost, just try pressing the right mouse
button and a context sensitive menu will pop up and hopefully present you
with the option you were looking for.

@menu
* The Main Window::
* The Timeline::
* The Wave Editor::
* The Filternetwork Editor::
* Dialogs::
@end menu

@node The Main Window, The Timeline, , Graphical Frontend
@section The Main Window

On startup, @file{glame} will present you an application window in well-known
GNOME design that contains a tree view of the so-called @dfn{swapfile}
currently in use. Representations of all the sound tracks you want to edit
will be stored here, so it's certainly a wise idea to put the swapfile on a
partition with plenty of free space. By default, the swapfile resides in 
@file{~/.glameswap}, but you can configure its location in the preferences 
window available from the Settings menu. Note that you need to restart
@file{glame} for the change to become active.

Within the swapfile, individual audio tracks are combined to @dfn{projects}.
You can create new projects using the entry New Project in the Project menu. 
This will insert a new item into the tree view of the swapfile and pop up 
an editing field where you can change the project's name. Double-clicking on
an item allows you to change the name later as well.

Now you're all set to start importing @dfn{files} into your new project, or to
subdivide it further into @dfn{groups}. A context sensitive menu offering
operations on groups or items respectively pops up when you press the
right mouse button. Those are your options:

@subsection Operations on groups

@table @code
@item Edit 
pops up a new window of the wave editor @pxref{The Wave Editor} containing 
all items of the group, where you can easily modify them. This operation is
not allowed for groups that in turn contain further sub-groups. Opening
a wave editor can be done by using the @code{w} key, too.

@item Timeline
pops up a new window of the timeline @pxref{The Timeline} containing 
all items of the group, where you can easily modify them. This operation is
not allowed for single items.

@item Delete
deletes the current group and all its items.

@item Add group
adds a new group to the current group.

@item Add clipboard
adds the contents of the clipboard as a new group to the current
group. The clipboard contents are populated by the edit operations in
the wave editor.

@item Add mono wave
adds a new mono wave to the current group where you can f.i. start
recording into or paste some random stuff into.

@item Add stereo wave
adds a new stereo wave group to the current group where you can
f.i. start recording into or paste some random stuff into.

@item Link selected
links the selected item into the current group. Linking
means that a change on the link will also modify the original and vice versa.

@item Copy selected
copies the selected item into the current group.
Copying means that changing the copy will not alter the original and vice
versa.

@item Merge with parent
moves all the current group's children up one level
and deletes the current group.

@item Flatten
merges all childs of the current group into the minimum number of
vertically aligned tracks all starting at horizontal position zero
and of the same length.

@item Apply operation
like the apply operation menu from the wave editor this applies the
selected operation to the whole current item or group. Useful operations
include things like normalize.

@item Import...
imports a file as a sub-group into the current group. Import is done
through a powerful import dialog which is described in the dialogs
section.

@item Export...
exports all children of the group as an ordinary sound file. Export
is done through a powerful export dialog which is described in the
dialogs section.
@end table

@subsection Operations on items

@table @code
@item Edit
pops up a new window of the wave editor @pxref{The Wave Editor},
where you can modify the selected item. Opening
a wave editor can be done by using the @code{w} key, too.

@item Delete
deletes the current item.

@item Group
puts the current item into a new group.

@item Apply operation
like the apply operation menu from the wave editor this applies the
selected operation to the whole current item or group. Useful operations
include things like normalize.

@item Export...
exports the current item as an ordinary sound file. Export
is done through a powerful export dialog which is described in the
dialogs section.
@end table


There exists an easy way to sequence multiple waves inside the main
windows tree view. Using drag and drop with the right modifier you can
move waves between horizontally (hbox) and vertically (vbox) sequenced
boxes (groups).  To move a wave to a different place first hold down the
right modifier to select the mode (see below), then select the item you
want to move with the left mouse button and start dragging it. The
destination is before the dropped onto wave or at the last position of
the dropped onto group.

The following two modes (selectable via the specified modifier) are
supported:

@table @code
@item CTRL
moves an item into a vbox. Here items are sorted one track per item.

@item SHIFT
moves an item into a hbox. Here items are sequenced horizontally, all
being in the same track.
@end table

At the time of dragging you can see the mouse cursor change from a
circle (indicating a drop at the current position is not possible which
in turn indicates a wrong group type of the current group) to a
hand (indicating a drop is possible). You can cancel a drop by dropping
on the dragged item.

If you want to change a vbox into a hbox (or vice versa) you need to
go through an intermediate group. First create a dummy group (or use
the project root, if you need a vbox) and start moving items there
(wether in hbox or vbox mode is arbitrary). Then move items back to
the original group with the right mode.

Note that you can move whole groups at once. So sequencing stereo
waves is possible, too, without breaking the stereo groupings.

In the main windows tree view you can use the following keyboard
shortcuts to change the waves speaker positions (where the active
wave is denoted by the item the mouse is pointing at):

@table @code
@item CTRL-l
associates the active wave with the left channel.

@item CTRL-r
associates the active wave with the right channel.

@item CTRL-m
associates the active wave with both channels (mono).
@end table


These are the items of the @code{Project} menu:

@table @code
@item New Project
Creates a new project (a toplevel group).

@item Edit File
Very quick edit one file. File selection is done through the import
dialog. A waveedit window is popped up with the selected file. Note that
the file is not permanently stored in the GLAME swapfile, but instead
is removed from it once you close the waveedit window. So you really want
to re-export the file once you are finished editing.

@item Import...
Imports a file into the GLAME swapfile without creating a project first.
This is useful for quick editing tasks which dont involve multiple files.

@item Empty [deleted]
Deletes all entries in the @code{[deleted]} folder. This operation cannot
be undone. Deleted elements are usually just moved to the @code{[deleted]}
folder so you can undo deletes by just moving items back. Emptying the
@code{[deleted]} folder can also be done by deleting the @code{[deleted]}
folder itself.

@item Show console
By selecting @code{Show console} from the project menu get access to the
powerful backend of glame via a scheme scripting language (or just view
some error logs popping up there).

@item Sync
Syncs the metadata of the swapfile to disk. You usually dont need to
invoke this.

@item Exit
Exits GLAME. The current state of the swapfile is saved and the project
tree will persist in its current state. You usually dont need to save
or export your work.
@end table


These are the items of the @code{Filternetwork} menu:

@table @code
@item New Filternetwork
Opens a new empty filternetwork editor window.

@item Open...
Opens a saved filternetwork in a new filternetwork editor window.

@item Load Plugin
You can manually load plugins into glame by using the @code{Load Plugin}
menu item from the filternetwork menu. This is useful for instance to use
external LADSPA plugins or custom filternetworks you didnt put into
the default GLAME search directory.
@end table


From the @code{Settings} menu you can invoke the preferences window, from
the @code{Help} menu you can invoke a gnome help browser with this
documentation or jump directly to the quick start guide.



@node The Timeline, The Wave Editor, The Main Window, Graphical Frontend
@section The Timeline

@strong{The timeline view is highly experimental and may cause other
parts of GLAME to fail operating on modified tracks. You can usually
recover from this situation by flattening the affected subtree, but
this may be not the thing you want to do. Be warned.}

The timeline pops up when the @code{Timeline} function is applied to a
group in the main window. The timeline presents a time vs. track view
of the group. At the top of the window a ruler is presented which shows
the time in seconds.

The active item and group appear highlighted. You can move the active
item horizontally (in time) using the mouse by clicking and dragging.
You can move items vertically (changing the track an item is in) by
using the up and down arrow keys. You can move whole groups vertically
by using the up and down arrow keys in conjunction with the shift
modifier key.

Like in any other window the @code{Close} and @code{Help} toolbar entries
close the window or bring up the gnome help browser with this documentation.


@node The Wave Editor, The Filternetwork Editor, The Timeline, Graphical Frontend
@section The Wave Editor

The wave editor pops up when the @code{Edit} function is applied to either a
group or a single item of the swapfile tree.
Editing is done on all items of a particular group
at once. Functions to edit and explore the current items can be reached via
the right mouse button or the toolbar. The wave editor is also reached
through the @code{Edit File} menu entry or the @code{w} accelerator.

Simple editing can be done using the ordinary @code{Cut}, @code{Copy},
@code{Paste}, @code{Delete}, @code{Undo} and @code{Redo} operations
inside the @code{Edit} submenu, that work on the current selection in
the active wave widget. You can cut and paste between different wave
widgets, if the numbers of channels match. When you operate on multiple
views of the same wave item at once, they will be kept in sync
automatically.

To control the view use the @code{View} submenu which contains the
items @code{Zoom to selection}, @code{Zoom in}, @code{Zoom out},
@code{View all} and @code{Goto marker}. The zoom in, zoom out and
view all functionalities can also be reached from the appropriate
toolbar entries.

To specify the current selection simply use the mouse and drag it with
the left mousebutton pressed. Alternatively you can use the @code{Select none} 
or @code{Select all} menu items from the @code{Select} submenu or the
corresponding buttons in the toolbar to remove
the actual selection or select the whole wave. Pressing shift and the
left mousebutton selects everything starting from the marker position (which
you can set using the left mousebutton) to the current position. The selection
and the marker position can be changed with dragging the marker or the
selections left or right edge (the cursor will change if you move over them).

Like in any other window the @code{Close} and @code{Help} menu entries
close the window or bring up the gnome help browser with this documentation.
Those items can also be reached from the toolbar.

Using the @code{Play all} and @code{Play selection} commands the whole
wave or the selected part will be send to the default audio output device
(which you can specify in the main windows preferences dialog). Using
the @code{Record at marker} and @code{Record into selection} commands
you can sample from the default audio input device (which you can specify
in the main windows preferences dialog) either starting at the marker
position and until you press the @code{STOP} button, or just inside the
selection. Using the play button from the toolbar will start playing
either the current selection or from the marker position if no selection
is active and will advance it until you either press the
stop button (which will appear at the place of the play button after
start) or the wave has ended. Playing can be reached through the
@code{Space} keyboard shortcut which does the same as the toolbar play
button. Pressing @code{SHIFT-Space} will loop the current selection or
the whole wave.

The @code{Apply operation} submenu allows you to apply operations like
normalize or fade to the current selection. Operations may pop up windows
for additional arguments or not.

The @code{Apply filter} submenu allows you to apply a pre-existing
filter to the active selection. Inside the apply window the list of
available parameters for the filter will appear which you may edit. With
the preview button you can figure out what the result after applying the
filter will sound like (you can abort the preview by pressing the
preview button again). Press the apply button if you are satisfied with
the setup. Press the cancel button if you dont want to modify the wave.

Alternatively, you can pop up the filternetwork editor
@pxref{The Filternetwork Editor}, where you can construct a custom
filter or use @code{Apply custom...} which creates a filternetwork
framework containing necessary inputs and outputs specified by the
current selection.

A shortcut to the export functionality is embedded in the toolbar
as a @code{Save} item. This is especially useful for waveedits
opened through the @code{Edit File} menu entry as this one does not
show the wave in the swapfile tree.



@node The Filternetwork Editor, Dialogs, The Wave Editor, Graphical Frontend
@section The Filternetwork Editor

The filternetwork editor is opened when you choose one of the custom
functions in the wave editor, or the item @code{New Filternetwork} in
the @code{Filternetwork} menu of the main window. The filternetwork editor
comprises of a tool bar at the top of the window to execute, save and
other functions, and a main canvas for connecting and adding
new nodes to the network. A preexisting network can be edited by opening
it from the @code{Open...} item in the @code{Filternetwork} menu of the
main window.

All functionality in the editing window is controlled via context sensitive
menus bound to the right mouse button. When clicking in a background region,
the add menu opens up, providing entries to add nodes, 
Plugins are bundled into categories to speed up finding the desired item.

When a new node is added, its icon appears on the editing canvas.
It shows its input ports (if available) on the left, and output ports
on the right. If no ports of a type are available the corresponding side bar
appears gray.

The icon in the middle of the box offers context menus for manipulating
parameters of the underlying plugin. 

To connect two plugins, click on the output port using the left mouse button,
and drag the appearing pipe to the desired input port. If a connection is possible,
a pipe connection will be drawn. To manipulate per-pipe parameters of the
connected nodes, a context menu is attached to the small black ball placed in
the middle of the pipe.

Clicking with the left mouse button on a item will highlight it with a light blue frame,
thus marking it as selected. You can alter selections by holding down the shift or control
modifier keys. Pressing on of the modifier keys while selecting will add the selected icon to
the current selection. 

Finally, if you hover over an icon or port or the circle contained in a pipe for a little while, 
the current parameter settings are shown, and the node is raised to the top.
The hovering delay can be adjusted in the preferences window.
The same applies for the connection between two nodes.

The created network can be executed with the corresponding button in the toolbar. 
A new window will popup with play/pause/stop/cancel buttons.
If anything is not set up correctly, the malicious plugin will be drawn in red,
and the error will be displayed when hovering over it.

Once you found your network adequate you may save it using the @code{Save} button in the
toolbar. You can also register the network as a new plugin that can be used in other 
networks. Before you have to add ports to your toplevel and/or redirect parameters from 
nodes. Ports can be redirected by choosing the @code{Connect to external port} from the
context menu of the port. Parameters are redirected by choosing @code{redirect parameters}
from the context menu of the node. 
You can delete or look at the external interface by selecting the @code{properties} button.

As last feature the zoomlevel may be adjusted with the @code{zoom in} and @code{zoom out}
buttons. The @code{View all} button recenters your view and adjusts the scrollable region.

As for now only few keybindings are exported, more will follow soon:
'd' will delete the current selection,
'g' will group the current selection,
'u' will ungroup the current selection.



@node Dialogs, , The Filternetwork Editor, Graphical Frontend
@section Dialogs

@menu
* The Preferences Dialog::
* The Import Dialog::
* The Export Dialog::
* The Apply Filter Dialog::
@end menu

@node The Preferences Dialog, The Import Dialog, , Dialogs
@subsection The Preferences Dialog

From within the preferences dialog (which you can reach from the
main windows @code{Settings} menu) you can change GLAME configuration
including the swapfile setup and your audio setup. Note that some
changes take effect only after restarting GLAME.

The preferences dialog presents you with three tabs, namely the
@code{Swapfile}, @code{Filternetwork} and @code{Audio I/O} tabs.
We're going through them seperately.

The first tab is the @code{Swapfile} tab which has the following
entries:
@table @code
@item Swapfile Path
Here you can configure where GLAME should place its internal representation
of the audio data. Note that GLAME uses this as a permanent (surviving
program quit) storage to store the complete application state. Changes
of the swapfile path take place after a GLAME restart only.

@item Depth of undo stack
Here you can configure the amount of edit steps you want to be able to
undo. This is a global number. Remember that each step of undo needs
space in the swapfile.

@item Caching
You are not supposed to change the caching parameters if you dont
known whats going on internally (we need to design a more friendly
interface for that). The only parameter you may want to tune is the
maximum virtual memory used for caching parameter if you have lots
of ram. This parameter is in bytes and if you change it, you need to
change the number of cached memory mappings by the same factor (its
a good idea to scale the other ones, too, but thats not necessary and
may break for Linux kernels oldet than 2.4).
@end table


The @code{Filternetwork} tab lets you configure some UI parameters
which are

@table @code
@item Property popup timeout
The time until the description properties do popup.

@item Mac mode
Changes other-than-left mouse-button operations to multi-clicks on
the left button. This is only useful if you are using mice with less
than two buttons.
@end table


The @code{Audio I/O} tab lets you configure the default audio input
and output device.

@table @code
@item Default input plugin
Here you can select (or edit) the plugin which should be used for
audio input. This should be @code{oss_audio_in} or @code{alsa_audio_in}
for most Linux boxen.

@item Default input device
Specify the input device corresponding to the soundcard you want to
record from. For oss this will be one of the @code{/dev/dsp} devices,
for alsa @code{plughw:0,0} or something like that.

@item Default output plugin
Like for the input case this is the plugin you want to use for audio
output.

@item Default output device
Device settings for audio output.

@item Size hint for audio buffers
This number specifies the default size of audio fragments that
get passed through the audio processing networks of GLAME. Choose
large values (1024) for slow machines, low values (128) for low
latency networks. The minimum internal latency can be calculated
like size hint divided by the samplerate (128 / 44100 Hz = 2.9 ms).
Note that the audio fragment size is usually limited by your audio
hardware, so this is only a hint and specifying values less than
32 will probably only hurt performance.
@end table



@node The Import Dialog, The Export Dialog, The Preferences Dialog, Dialogs
@subsection The Import Dialog

@node The Export Dialog, The Apply Filter Dialog, The Import Dialog, Dialogs
@subsection The Export Dialog

@node The Apply Filter Dialog, , The Export Dialog, Dialogs
@subsection The Apply Filter Dialog

The apply filter dialog is reached from the waveedit window through the
right mousebutton menu by choosing the @code{Apply filter...} entry and
operates on the current selection. In the upper part of the dialog the
parameters of the selected filter are displayed and can be edited.

The lower part of the dialog contains a progress bar for both
preview and apply operation. The functions of the buttons are the
following:

@table @code
@item Preview
This button starts previewing of the selected region with the filter
with the specified parameters applied. To stop previewing press the
preview button again. For most filters you can change parameters while
the preview is active, so you can tune them with realtime feedback.

@item Apply
This button starts applying the filter to the selected region and
closes the dialog after it is finished.

@item Cancel
Cancels the apply filter operation. No changes are made to the
current selection.

@item Help
Pops up the gnome help browser with help on the selected filter.
@end table


