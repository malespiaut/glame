dnl Process this file with autoconf to produce a configure script.

AC_INIT(configure.in)
AM_INIT_AUTOMAKE(glame, 0.3.5)
AM_CONFIG_HEADER(config.h)

dnl Pick up additional macros from the macros directory
AM_ACLOCAL_INCLUDE(macros)


dnl
dnl Switch to configure debugging stuff - sane default for now.
dnl

AC_ARG_ENABLE(debug, [  --enable-debug          lots of debugging code ], debug=$enableval, debug=1)
if test "$debug" = "no"; then
	debug=0
elif test "$debug" = "yes"; then
	debug=2
fi
if test $debug -eq 2; then
	AC_DEFINE(DEBUG)
elif test $debug -eq 0; then
	AC_DEFINE(NDEBUG)
fi

dnl
dnl Checks for programs.
dnl

dnl Compiling without gcc is not supported but may succeed.
AC_PROG_CC
if test "$GCC" = "yes"; then
	AC_DEFINE(HAVE_GCC)
	if test $debug -eq 0; then
		CFLAGS="-O3 -fomit-frame-pointer -ffast-math -fstrict-aliasing"
	elif test $debug -eq 1; then
		CFLAGS="$CFLAGS -Wall"
	else
		CFLAGS="-Wall -g -O0"
	fi
else
  AC_MSG_WARN([Compilers other than gcc are not supported])
fi

AC_PROG_INSTALL
AC_LIBTOOL_DLOPEN
AM_PROG_LIBTOOL



dnl FIXME: The next two checks break cross-compiling.
dnl        Unfortunately run-time checks would mean performance impacts or are
dnl        simply not an option. [dk]

dnl Check endianness
AC_C_BIGENDIAN
AC_CHECK_HEADER(byteswap.h,AC_DEFINE(HAVE_BYTESWAP_H),)

dnl Check width of basic types
AC_CHECK_SIZEOF(short)
AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(long)
AC_CHECK_SIZEOF(long long)

dnl
dnl Checks for libraries.
dnl use GLAME_LIBS & GLAME_CFLAGS
dnl and GLAME_DLIBS & GLAME_DCFLAGS
dnl

dnl pthread lib - GLAME is threaded everywhere, so global
dnl LIBS and CFLAGS use is ok.
ACX_PTHREAD([
LIBS="$PTHREAD_LIBS"
CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
CC="$PTHREAD_CC"
AC_DEFINE(USE_PTHREADS)
], [
AC_ERROR(You need pthreads to run glame!)
])

dnl
dnl GUI stuff - require GNOME for anything
dnl

dnl switch to disable gui
AC_ARG_ENABLE(gui, [  --enable-gui            GUI - needs recent GTK/GNOME ], gui=$enableval, gui=yes)

dnl GNOME check
if test x$gui = xyes; then
  GNOME_INIT_HOOK([have_gnome=yes],,)
else
  AC_MSG_RESULT([GUI was disabled.])
fi
AM_CONDITIONAL(HAVE_GNOME, test x$have_gnome = xyes)


dnl
dnl GUILE check, fail if not there
dnl

GNOME_CHECK_GUILE("fail")

dnl
dnl check for single precision fftw
dnl
AC_CHECK_LIB(sfftw, fftw2d_create_plan, sfl=yes, sfl=no)
AC_CHECK_HEADER(sfftw.h,, sfl=no)
if test $sfl = yes; then
	GLAME_FFT_LIBS="$GLAME_FFT_LIBS -lsfftw -lsrfftw"
	AC_DEFINE(HAVE_SFFTW)
fi
AM_CONDITIONAL(HAVE_SFFTW, test x$sfl = xyes)


dnl
dnl Checks for various audio stuff.
dnl

dnl check for libaudiofile
AC_CHECK_LIB(audiofile, afCloseFile, laf=yes, laf=no)
AC_CHECK_HEADER(audiofile.h,, laf=no)
if test $laf = yes; then
	GLAME_AUDIO_LIBS="$GLAME_AUDIO_LIBS -laudiofile"
	AC_DEFINE(HAVE_AUDIOFILE)
fi

dnl check for OSS
dnl BSD keeps the header file
dnl in sys/, Linux in linux/, 
dnl other Unices in machine/
AC_CHECK_HEADER(linux/soundcard.h, oss=yes, oss=no)
if test $oss = yes; then
	AC_DEFINE(HAVE_OSS)
	AC_DEFINE(HAVE_OSS_LINUX)
else
	AC_CHECK_HEADER(sys/soundcard.h, oss=yes, oss=no)
	if test $oss = yes; then
		AC_DEFINE(HAVE_OSS)
		AC_DEFINE(HAVE_OSS_SYS)
	else 
		AC_CHECK_HEADER(machine/soundcard.h, oss=yes, oss=no)
		if test $oss = yes; then
			AC_DEFINE(HAVE_OSS)
			AC_DEFINE(HAVE_OSS_MACHINE)
		fi
	fi
fi

dnl check for libsndfile - FIXME
lsf=no
if test $lsf = yes; then
	GLAME_AUDIO_LIBS="$GLAME_AUDIO_LIBS -lsndfile"
	AC_DEFINE(HAVE_SNDFILE)
fi

dnl check for esd
AM_PATH_ESD(0.2.0, esd=yes, esd=no)
if test $esd = yes; then
	GLAME_AUDIO_LIBS="$GLAME_AUDIO_LIBS $ESD_LIBS"
	GLAME_AUDIO_CFLAGS="$GLAME_AUDIO_CFLAGS $ESD_CFLAGS"
	AC_DEFINE(HAVE_ESD)
fi

dnl check for native IRIX audio
AC_CHECK_LIB(audio, alWriteBuffers, la=yes, la=no)
AC_CHECK_HEADER(dmedia/audio.h,, la=no)
if test $la = yes; then
	GLAME_AUDIO_LIBS="$GLAME_AUDIO_LIBS -laudio"
	AC_DEFINE(HAVE_SGIAUDIO)
fi

dnl check for ALSA
AM_PATH_ALSA(0.5.0, alsa="yes", alsa="no")
if test "x$alsa" = xyes; then
	GLAME_AUDIO_LIBS="$GLAME_AUDIO_LIBS $ALSA_LIBS"
	GLAME_AUDIO_CFLAGS="$GLAME_AUDIO_CFLAGS $ALSA_CFLAGS"
	AC_DEFINE(HAVE_ALSA)
fi


dnl
dnl extra debugging stuff
dnl

dnl check for electric fence - temp. disabled due to efence bugs(!?)
if test $debug -eq 2; then
	efence=""
	AC_CHECK_LIB(efence, Page_AllowAccess, efence="-lefence")
dnl	GLAME_DLIBS="$GLAME_DLIBS $efence"
fi



dnl
dnl UNIX flavours compatibility stuff
dnl

dnl Checks for header files.
AC_HEADER_STDC
AC_HEADER_TIME
AC_HEADER_DIRENT
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h sys/file.h unistd.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_INLINE
AC_TYPE_OFF_T
AC_STRUCT_ST_BLOCKS
AC_TYPE_SIGNAL
AC_TYPE_PID_T


dnl Check for broken SYSV semaphores
ACG_CHECK_SEMUN
ACG_CHECK_SEMCTL

dnl Checks for library functions.
AC_FUNC_MMAP
AC_FUNC_MADVISE


dnl special code hooks for os
case "$host_os" in
*linux*)
	AC_DEFINE(OS_LINUX);;
*bsd*)
	AC_DEFINE(OS_BSD);;
*irix*)
	AC_DEFINE(OS_IRIX);;
esac

dnl
dnl Checks for asm code support
dnl


dnl
dnl Disable fast assembler routines, use slower C code instead.
dnl

AC_ARG_ENABLE(asm, [  --enable-asm             enable fast assembler routines ], asm=$enableval, asm=yes)
dnl special asm code hooks for cpu -- require GCC.
if test "$asm" = "yes" -a "x$GCC" = "xyes"; then
	case "$host_cpu" in
	i?86)
		AC_DEFINE(CPU_X86);;
	mips*)
		AC_DEFINE(CPU_MIPS);;
	esac
fi


dnl
AM_CONDITIONAL(STATICLIBS, test x$enable_static = xyes)

AC_SUBST(GLAME_LIBS)
AC_SUBST(GLAME_CFLAGS)
AC_SUBST(GLAME_DLIBS)
AC_SUBST(GLAME_DCFLAGS)
AC_SUBST(GLAME_AUDIO_LIBS)
AC_SUBST(GLAME_AUDIO_CFLAGS)
AC_SUBST(GLAME_FFT_LIBS)

AC_OUTPUT(Makefile macros/Makefile doc/Makefile data/Makefile data/pixmaps/Makefile src/Makefile src/filter/Makefile src/swapfile/Makefile src/hash/Makefile src/plugins/Makefile src/include/Makefile src/gui/Makefile src/glmid/Makefile)
