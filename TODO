Things to fix before 0.2.0:
===========================

- read-file is hell slow (80% CPU!) -> optimize and specialize
  inner loops
- deprecate (disable!?) pipe parameters
- audit all paths/makefiles wrt make install [done, do it again
  later]
- filters/plugins
  * which to keep, which additionally needed
  * filter names (_ vs -)
  * parameter names, parameter types
  * assign/create pixmaps
  * mix needs to be truly asynchron with internal buffer queues
    for send and recieve. Ugh.
- documentation
  * UI/GUI documentation
  * document available filters
  * fix API documentation (changed filter part again) [done, parts
    are still missing]
  * filter writing tutorial?


TODOs of the various subsystems/programs, [] tells about the
"maintainer" or the one who is supposed to fix it.

doc/
	- document available filters [nold/the filter authors]

glmid/gltrack.[ch], plugins/track_io.c
	[LATER]
	- redo wrt positional parameter
	- rethink wrt wave gui

filter/
	[LATER] [richi]
        - parameters:
          * abstraction from the parameter domain, i.e.
            in principle allow parameters of everyting
          * better type abstraction of the parameter, perhaps
            move to a textual type description (like XML...)
          * allow shared parameters, i.e. only loosely couple
            parameters with their domain
        - general class stuff
          * symmetry. filter_portdesc_t needs an instance - this
            should allow filter_pipe_t to be more decoupled also
            which should allow filternode filters to be simplified,
            too
          * methods: some of them are really notifier signals - 
            provide a generic signal/signalhandler framework - this
            should allow the GUI to register handlers, too
            real methods are: connect_in/out, set_param
        - API/implementation stuff
          * are hashes really necessary? (we need lists anyway)
          * symmetry: name vs. pointer APIs
	  * there are way too many API functions...
          * -> move from API functions to method calls where
            appropriate?

swapfile/
        [LATER] [richi]
	- redo transactions and high level operations, i.e.
	  clean them up - first step done (it works)
	- redo the lowlevel part (fuse runtime and on-disk structures,
	  use meta part of the swapfile directly)

gui/
	[LATER] [all]
	- we need some ideas how to do the wave-editing stuff, especially
          how to couple it with the filter stuff.

